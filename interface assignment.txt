1)
interface A 
show1 :return and argumment 
show2 :return and no argumment 


class B impl
show3 :no return and no argumment 

show4 : :return and argumment 

class Main 
access 

Ans)
interface A{
    int show1(int a);
    int show2();
}
class B implements A{
    public int show1(int a){
        return a;
    }
    public int show2(){
        return 0;
    }
    void show3(){
        System.out.println("I am Show3");
    }
    void show4(){
        System.out.println("I am show4");
    }
}
public class Test {
    public static void main(String[] args) {
        B k = new B();
        k.show1(10);
        k.show2();
        k.show3();
        k.show4();
    }
}


-----------------------------------------------------------------------------
2)
interface A 
show1 :return and argumment 


class B impl
show3 :no return and no argumment 


interface C
show2 :return and no argumment 

class D impl
show4 : :return and argumment 

class Main 
access

Ans)
interface A{
    int show1(int a);
}
class B implements A{
    public int show1(int a){
        return a;
    }
    void show2(){
        System.out.println("I am Show3");
    }
}
interface C{
    int show3();
}
class D implements C{
    public int show3(){
        return 0;
    }
    int show4(int a){
        return a;
    }
}
public class Test {
    public static void main(String[] args) {
        B k = new B();
        k.show1(10);
        k.show2();
        D k1 = new D();
        k1.show3();
        k1.show4(20);
    }
}

-----------------------------------------------------------------------------
3)
interface A
show1 :return and argumment 


interface B
show3 :no return and no argumment 


interface C
show4 : :return and argumment 

interface D
show2 :return and no argumment 

class E impl A,B

class F impl C,D

class G impl A

Main access

Ans)
import java.util.*;
interface A{
    int show1(int a);
}
interface B{
    void show3();
}
interface C{
    int show4(int a);
}
interface D{
    int show2();
}
class E implements A,B{
    public int show1(int a){
        System.out.println("show1");
        return 1;
    }
    public void show3(){
        System.out.println("hello i am show3");
    }
}
class F implements C,D{
    public int show4(int a){
        System.out.println("show4");
        return a;
    }
    public int show2(){
        System.out.println("show2");
        return 0;
    }
}
class G implements A{
    public int show1(int a){
        System.out.println("show1");
        return a;
    }
}
public class Test {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show3();
        F k1 = new F();
        k1.show2();
        k1.show4(a);
        G k2 = new G();
        k2.show1(a);
    }
}

-----------------------------------------------------------------------------
interface A
show1 :return and argumment 


interface B ex A 
show3 :no return and no argumment 


interface C -->B
show4 : :return and argumment 

interface D --->C
show2 :return and no argumment 

class E impl C

class F impl D

class G impl B

Main access impl A

Ans)
import java.util.*;
interface A{
    int show1(int a);
}
interface B extends A{
    void show3();
}
interface C extends B{
    int show4(int a);
}
interface D extends C{
    int show2();
}
class E implements C{
    public int show1(int a){
        System.out.println("show1");
        return a;
    }
    public void show3(){
        System.out.println("Show3");
    }
    public int show4(int a){
        System.out.println("show4");
        return a;
    }
}
class F implements D{
    public int show1(int a){
        System.out.println("show1");
        return a;
    }
    public int show2(){
        System.out.println("show2");
        return 0;
    }
    public void show3(){
        System.out.println("Show3");
    }
    public int show4(int a){
        System.out.println("show4");
        return a;
    }
}
class G implements B{
    public int show1(int a){
        System.out.println("show1");
        return a;
    }
    public void show3(){
        System.out.println("Show3");
    }
}
public class Test implements A{
    public int show1(int a){
        System.out.println("show1");
        return a;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show3();
        k.show4(a);
        F k1 = new F();
        k1.show1(a);
        k1.show2();
        k1.show3();
        k1.show4(a);
        G k2 = new G();
        k2.show1(a);
        k2.show3();
    }
}

-----------------------------------------------------------------------------
interface A
show1 :return and argumment 


interface B ex A 
show1 :no return and no argumment 


interface C -->B
show1 : :return and argumment 

interface D --->C
show1 :return and no argumment 

class E impl C

class F impl D

class G impl B

Main access impl A

Ans)
import java.util.*;
interface A{
    int show1(int a,int b);
}
interface B extends A{
    void show1();
}
interface C extends B{
    int show1(int a);
}
interface D extends C{
    void show1();
}
class E implements C{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public void show1(){
        System.out.println("Show3");
    }
    public int show1(int a){
        System.out.println("show4");
        return a;
    }
}
class F implements D{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public void show1(){
        System.out.println("Show3");
    }
    public int show1(int a){
        System.out.println("show4");
        return a;
    }
    public void show(){
        System.out.println("showlast");
    }
}
class G implements B{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public void show1(){
        System.out.println("Show3");
    }
}
public class Test implements A{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1();
        k.show1(a);
        k.show1(a, b);
        F k1 = new F();
        k1.show();
        k1.show1();
        k1.show1(a, b);
        G k2 = new G();
        k2.show1();
        k2.show1(a, b);
    }
}


-----------------------------------------------------------------------------
interface A
show1 :return and argumment 


interface B ex A 
show1 :return and argumment


interface C -->B
show1 :return and argumment

interface D --->C
show1 :return and argumment

class E impl C

class F impl D

class G impl B

Main access impl A

Ans)
import java.util.*;
interface A{
    int show1(int a,int b);
}
interface B extends A{
    int show1(int a);
}
interface C extends B{
    int show1(int a);
}
interface D extends C{
    int show1(int a);
}
class E implements C{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public int show1(int a,float b){
        System.out.println("Show3");
        return a;
    }
    public int show1(int a){
        System.out.println("show4");
        return a;
    }
}
class F implements D{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public int show1(int a){
        System.out.println("Show3");
        return a;
    }
    public int show1(int a,float b){
        System.out.println("show4");
        return a;
    }
    public int show1(int a,double b){
        System.out.println("showlast");
        return a;
    }
}
class G implements B{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public int show1(int a){
        System.out.println("Show3");
        return a;
    }
}
public class Test implements A{
    public int show1(int a,int b){
        System.out.println("show1");
        return a;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show1(a, b);
        k.show1(a, b);
        F k1 = new F();
        k1.show1(a);
        k1.show1(a, b);
        k1.show1(a, b);
        k1.show1(a, b);
        G k2 = new G();
        k2.show1(a);
        k2.show1(a, b);
    }
}


-----------------------------------------------------------------------------
interface A
show1 :return and argumment 
	interface B 
	show1 :return and argumment
	interface C 
	show1 :return and argumment

	interface D --->C
	show1 :return and argumment

class E impl C

class F impl D

class G impl B

Main access impl A

Ans)
import java.util.*;
interface A{
    int show1(int a,int b);
    interface B{
        int show1(int a);
    }
    interface C{
        int show1(int a);
    }
    interface D extends C{
        int show1(int a);
    }
}



class E implements A.C{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface C");
        return 0;
    }
}
class F implements A.D{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a,float b){
        System.out.println("Interface C");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface D");
        return 0;
    }
}
class G implements A.B{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface D");
        return 0;
    }
}
public class Test implements A{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return a;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show1(a, b);
        F k1 = new F();
        k1.show1(a);
        k1.show1(a, b);
        k1.show1(a, b);
        G k2 = new G();
        k2.show1(a);
        k2.show1(a, b);
    }
}

-----------------------------------------------------------------------------
interface A
show1 :return and argumment 
	interface B 
	show1 :return and argumment
	interface C 
	show1 :return and argumment

	interface D --->C
	show1 :return and argumment


class E impl C

class F impl D

class G impl B

Main access impl A
child k through 

Ans)
import java.util.*;
interface A{
    int show1(int a,int b);
    interface B{
        int show1(int a);
    }
    interface C{
        int show1(int a);
    }
    interface D extends C{
        int show1(int a);
    }
}
class E implements A.C{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface C");
        return 0;
    }
}
class F implements A.D{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a,float b){
        System.out.println("Interface C");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface D");
        return 0;
    }
}
class G implements A.B{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return 0;
    }
    public int show1(int a){
        System.out.println("Interface D");
        return 0;
    }
}
public class Test implements A{
    public int show1(int a,int b){
        System.out.println("Interface A");
        return a;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show1(a, b);
        F k1 = new F();
        k1.show1(a);
        k1.show1(a, b);
        k1.show1(a, b);
        G k2 = new G();
        k2.show1(a);
        k2.show1(a, b);
    }
}

//Not possible as we can not call while implimenting because it activates anonymous inner class.
-----------------------------------------------------------------------------
interface A 
show1 :return and argumment 
show2 :return and no argumment 


class B impl
show3 :no return and no argumment 

show4 : :return and argumment 

class Main 
access 
child k through 

Ans)
import java.util.*;
interface A{
    int show1(int a);
    int show2(int a);
}
class G implements A{
    void show3(){
        System.out.println("This is show3");
    }
    int show4(int a){
        System.out.println("This is show4");
        return 0;
    }
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
    public int show2(int a){
        System.out.println("This is show2");
        return 0;
    }
}
public class Test{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        G k = new A();

        // can not access it through child
    }
}


-----------------------------------------------------------------------------
anonymous inner class :

interface A
show1 :return and argumment 

interface B
show3 :no return and no argumment 


interface C
show4 : :return and argumment 

interface D
show2 :return and no argumment 

class E impl A,B

class F impl C,D

class G impl A

Main access

Ans)
import java.util.*;
interface A{
    int show1(int a);
}
interface B{
    void show3();
}
interface C{
    int show4(int a);
}
interface D{
    int show2();
}
class E implements A,B{
    public void show3(){
        System.out.println("This is show3");
    }
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
}
class F implements C,D{
    public int show4(int a){
        System.out.println("This is show4");
        return 0;
    }
    public int show2(){
        System.out.println("This is show2");
        return 0;
    }
}
public class Test{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show3();
        F k1 = new F();
        k1.show2();
        k1.show4(a);
    }
}

-----------------------------------------------------------------------------

interface A 
show1 :return and argumment 
show2 :return and no argumment :default 


class B impl
show3 :no return and no argumment 

show4 : :return and argumment 

class Main 
access 
child k through 

Ans)
import java.util.*;
interface A{
    int show1(int a);
    default int show2(){
        System.out.println("This is show2");
        return 0;
    }
}
class B implements A{
    void show3(){
        System.out.println("This is show3");
    }
    int show4(int a){
        System.out.println("This is show4");
        return 0;
    }
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
}
public class Test{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        B k = new A();

        // it will give error because we can not call our implemented class through child which is an interface
    }
}


-----------------------------------------------------------------------------
class A
	interface B
	show1 :return and argumment 
	show2 :return and no argumment :default 

	interface C
	show3 :no return and no argumment 

	interface D
	show2 :return and no argumment 

class B impl A

Main class :access

Ans)
import java.util.*;
class A{
    interface B{
        int show1(int a);
        default int show2(){
            System.out.println("This is show2");
            return 0;
        }
    }
    interface C{
        void show3();
    }
    interface D{
        int show2();
    }
}
class B implements A{         // we can not implement in between two classes
    public void show3(){
        System.out.println("This is show3");
    }
    public int show2(){
        System.out.println("This is show2");
        return 0;
    }
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
}
public class Test{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();

    }
}


-----------------------------------------------------------------------------
interface A
show1 :return and argumment 


interface B
show3 :no return and no argumment 


interface C
show4 : :return and argumment 

interface D
show2 :return and no argumment 

class E impl A,B
show5() :

class F ex E impl C,D

class G ex F impl A

Main access

Ans)
import java.util.*;
interface A{
    int show1(int a);
}
interface B{
    void show3();
}
interface C{
    int show4(int a);
}
interface D{
    int show2();
}
class E implements A,B{
    public void show3(){
        System.out.println("This is show3");
    }
    void show5(){
        System.out.println("This is show5");
    }
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
}
class F extends E implements C,D{
    public int show4(int a){
        System.out.println("This is show4");
        return 0;
    }
    public int show2(){
        System.out.println("This is show2");
        return 0;
    }
}
class G extends F implements A{
    public int show1(int a){
        System.out.println("This is show1");
        return 0;
    }
}
public class Test{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number");
        int a = sc.nextInt();
        System.out.println("Enter the number");
        int b = sc.nextInt();
        E k = new E();
        k.show1(a);
        k.show3();
        k.show5();
        F k1 = new F();
        k1.show1(a);
        k1.show2();
        k1.show3();
        k1.show4(a);
        k1.show5();
        G k2 = new G();
        k2.show1(a);
        k2.show2();
        k2.show3();
        k2.show4(a);
        k2.show5();
    }
}
