1)
Problem Statement – Chaman planned to choose a four digit lucky number for his car. His
lucky numbers are 3,5 and 7. Help him find the number, whose sum is divisible by 3 or 5 or
7. Provide a valid car number, Fails to provide a valid input then display that number is not a
valid car number.
Note : The input other than 4 digit positive number[includes negative and 0] is considered as
invalid.
Refer the samples, to read and display the data.
Sample Input 1:
Enter the car no:1234
Sample Output 1:
Lucky Number
Sample Input 2:
Enter the car no:1214
Sample Output 2:
Sorry its not my lucky number
Sample Input 3:
Enter the car no:14
Sample Output 3:
14 is not a valid car number

import java.util.*;

public class Mnc {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number for car");
        int num = sc.nextInt();
        if(num>=1000 && num<=9999){
            int rem;
            int sum = 0;
            while(num>0){
                rem = num%10;
                sum = sum+rem;
                num = num/10;
            }
            if(sum%3==0 || sum%5==0 || sum%7==0){
                System.out.println("This is lucky number");
            }
            else{
                System.out.println("This is not lucky number");
            }
        }
        else{
            System.out.println("Not vaild input");
        }
    }
}


2nd way

import java.util.*;

public class Mnc {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number for car");
        int num = sc.nextInt();
        int count = 0;
        while(num>0){
            count++;
            num = num/10;
        }
        if(count==4){
            int rem;
            int sum = 0;
            while(num>0){
                rem = num%10;
                sum = sum+rem;
                num = num/10;
            }
            if(sum%3==0 || sum%5==0 || sum%7==0){
                System.out.println("This is lucky number");
            }
            else{
                System.out.println("This is not lucky number");
            }
        }
        else{
            System.out.println("Not vaild input");
        }
    }
}
-----------------------------------------------------------------------------------------------------------------------------
2)
XYZ Technologies is in the process of increment the salary of the employees. This
increment is done based on their salary and their performance appraisal rating.
If the appraisal rating is between 1 and 3, the increment is 10% of the salary.
If the appraisal rating is between 3.1 and 4, the increment is 25% of the salary.
If the appraisal rating is between 4.1 and 5, the increment is 30% of the salary.
Help them to do this, by writing a program that displays the incremented salary. Write a
class “IncrementCalculation.java” and write the main method in it.
Note : If either the salary is 0 or negative (or) if the appraisal rating is not in the range 1 to
5 (inclusive), then the output should be “Invalid Input”.
Sample Input 1 :
Enter the salary
8000

Enter the Performance appraisal rating
3
Sample Output 1 :
8800
Sample Input 2 :
Enter the salary
7500
Enter the Performance appraisal rating
4.3
Sample Output 2 :
9750
Sample Input 3 :
Enter the salary
-5000
Enter the Performance appraisal rating
6
Sample Output 3 :
Invalid Input

 import java.util.*;

    public class Main{
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            System.out.println("Enter the salary ");
            float sal = sc.nextFloat();
            System.out.println("Enter the Performance appraisal rating ");
            float ap = sc.nextFloat();
            if(ap>=1 && ap<=3){
                float inc = (sal/100)*10;
                System.out.println("The salary is "+(sal+inc));
            }
            else if(ap>=3.1 && ap<=4){
                float inc = (sal/100)*25;
                System.out.println("The salary is "+(sal+inc));
            }
            else if(ap>=4.1 && ap<=5){
                float inc = (sal/100)*30;
                System.out.println("The salary is "+(sal+inc));
            }
        }
    }
--------------------------------------------------------------------------------------------------------------------------------------------

3)
Problem Statement – Goutam and Tanul plays by telling numbers. Goutam says a number
to Tanul. Tanul should first reverse the number and check if it is same as the original. If yes,
Tanul should say “Palindrome”. If not, he should say “Not a Palindrome”. If the number is
negative, print “Invalid Input”. Help Tanul by writing a program.
Sample Input 1 :
21212
Sample Output 1 :
Palindrome
Sample Input 2 :
6186
Sample Output 2 :
Not a Palindrome

 import java.util.*;

    public class Main{
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            System.out.println("Enter the number ");
            int num = sc.nextInt();
            int rem;
            int sum = 0;
            int temp = num;
            while(num>0){
                rem = num%10;
                sum = sum*10+rem;
                num = num/10;
            }
            if(sum==temp){
                System.out.println("Yes! Goutam it is a pallindrom!");
            }
            else{
                System.out.println("No ! goutam it is not a pallindrom");
            }
        }
    }
-----------------------------------------------------------------------------------------------------------


4)
Problem Statement – To speed up his composition of generating unpredictable rhythms,
Blue Bandit wants the list of prime numbers available in a range of numbers.Can you help
him out?
Write a java program to print all prime numbers in the interval [a,b] (a and b, both inclusive).
Note
Input 1 should be lesser than Input 2. Both the inputs should be positive.
Range must always be greater than zero.
If any of the condition mentioned above fails, then display “Provide valid input”
Use a minimum of one for loop and one while loop
Sample Input 1:
2
15
Sample Output 1:
2 3 5 7 11 13
Sample Input 2:
8
5
Sample Output 2:
Provide valid input

import java.util.*;

public class Mnc {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the starting number ");
        int a = sc.nextInt();
        System.out.println("Enter the ending number ");
        int b = sc.nextInt();
        for(;a<=b;){
            int count = 0;
            for(int i=2; i<a; i++){
                if(a%i==0){
                    count++;
                }
            }
            if(count==0){
                System.out.print(a+" ");
            }
            else{
                count++;
            }
            a++;
        }
    }
}
----------------------------------------------------------------------------------------------------
5)
Problem Statement – Rhea Pandey’s teacher has asked her to prepare well for the
lesson on seasons. When her teacher tells a month, she needs to say the season
corresponding to that month. Write a program to solve the above task.
Spring – March to May,
Summer – June to August,
Autumn – September to November and,
Winter – December to February.
Month should be in the range 1 to 12. If not the output should be “Invalid month”.

Sample Input 1:
Enter the month:11
Sample Output 1:
Season:Autumn
Sample Input 2:
Enter the month:13
Sample Output 2:
Invalid month

import java.util.*;

public class Mnc {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Write the month");
        String name = sc.nextLine();
        if(name.equals("march to may")){
            System.out.println("spring");
        }
        else if(name.equals("june to august")){
            System.out.println("summer");
        }
        else if(name.equals("sept to nov")){
            System.out.println("autumn");
        }
        else if(name.equals("dec to feb")){
            System.out.println("winter");
        }
        else{
            System.out.println("invalid");
        }
    }
}
---------------------------------------------------------------------------

6)
Problem Statement – FOE college wants to recognize the department which has
succeeded in getting the maximum number of placements for this academic year.
The departments that have participated in the recruitment drive are CSE,ECE,
MECH. Help the college find the department getting maximum placements. Check
for all the possible output given in the sample snapshot
Note : If any input is negative, the output should be “Input is Invalid”. If all
department has equal number of placements, the output should be “None of the
department has got the highest placement”.
Sample Input 1:
Enter the no of students placed in CSE:90
Enter the no of students placed in ECE:45
Enter the no of students placed in MECH:70
Sample Output 1:
Highest placement
CSE
Sample Input 2:
Enter the no of students placed in CSE:55
Enter the no of students placed in ECE:85
Enter the no of students placed in MECH:85
Sample Output 2:
Highest placement
ECE
MECH
Sample Input 3:
Enter the no of students placed in CSE:0
Enter the no of students placed in ECE:0
Enter the no of students placed in MECH:0
Sample Output 3:

None of the department has got the highest placement
Sample Input 4:
Enter the no of students placed in CSE:10
Enter the no of students placed in ECE:-50
Enter the no of students placed in MECH:40
Sample Output 4:
Input is Invalid

import java.util.*;

public class Mnc {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number of placement number in CSE ");
        int cse = sc.nextInt();
        System.out.println("Enter the number of placement number in ECE ");
        int ece = sc.nextInt();
        System.out.println("Enter the number of placement number in MECH ");
        int mech = sc.nextInt();
        if(ece>0 || cse>0 || mech>0){
            if(cse>ece && cse>mech){
                System.out.println("Highest placement cse "+cse);
            }
            else if(ece>cse && ece>mech){
                System.out.println("Highest palcement ece "+ece);
            }
            else if(mech>ece && mech>cse){
                System.out.println("Highest palcement mech "+mech);
            }
            else{
                System.out.println("None of the department has got the highest placement");
            }
        }
        else{
            System.out.println("Input is invalid");
        }
    }
}
--------------------------------------------------------------------------
8)
Problem Statement – Ritik wants a magic board, which displays a character for a
corresponding number for his science project. Help him to develop such an
application.
For example when the digits 65,66,67,68 are entered, the alphabet ABCD are to be
displayed.
[Assume the number of inputs should be always 4 ]
Sample Input 1:
Enter the digits:
65
66
67
68
Sample Output 1:
65-A
66-B
67-C
68-D
Sample Input 2:
Enter the digits:
115
116
101
112
Sample Output 2:
115-s
116-t

101-e
112-p
9)
Vohra went to a movie with his friends in a Wave theatre and during break time he
bought pizzas, puffs and cool drinks. Consider the following prices :
Rs.100/pizza
Rs.20/puffs
Rs.10/cooldrink
Generate a bill for What Vohra has bought.
Sample Input 1:
Enter the no of pizzas bought:10
Enter the no of puffs bought:12
Enter the no of cool drinks bought:5
Sample Output 1:
Bill Details
No of pizzas:10
No of puffs:12
No of cooldrinks:5
Total price=1290
ENJOY THE SHOW!!!
10)
Problem Statement – Write a program to calculate the fuel consumption of your
truck.The program should ask the user to enter the quantity of diesel to fill up the
tank and the distance covered till the tank goes dry.Calculate the fuel consumption
and display it in the format (liters per 100 kilometers).
Convert the same result to the U.S. style of miles per gallon and display the result. If
the quantity or distance is zero or negative display ” is an Invalid Input”.
[Note: The US approach of fuel consumption calculation (distance / fuel) is the
inverse of the European approach (fuel / distance ). Also note that 1 kilometer is
0.6214 miles, and 1 liter is 0.2642 gallons.]
The result should be with two decimal place.To get two decimal place refer the
below-mentioned print statement :

float cost=670.23;
System.out.printf(“You need a sum of Rs.%.2f to cover the trip”,cost);
Sample Input 1:
Enter the no of liters to fill the tank
20
Enter the distance covered
150
Sample Output 1:
Liters/100KM
13.33
Miles/gallons
17.64
Explanation:
For 150 KM fuel consumption is 20 liters,
Then for 100 KM fuel consumption would be (20/150)*100=13.33,
Distance is given in KM, we have to convert it to miles (150*0.6214)=93.21,
Fuel consumption is given in liters, we have to convert it to gallons
(20*0.2642)=5.284,
Then find (miles/gallons)=(93.21/5.284)=17.64
Sample Input 2:
Enter the no of liters to fill the tank
-5
Sample Output 2:
-5 is an Invalid Input
Sample Input 3:
Enter the no of liters to fill the tank
25
Enter the distance covered
-21

Sample Output 3:
-21 is an Invalid Input